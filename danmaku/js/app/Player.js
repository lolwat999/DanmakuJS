define(["require","./Entity","./InputMap","./Input","lib/Three"],function(a){var b=a("./Entity"),c=a("./InputMap"),d=a("./Input"),e=a("lib/Three"),f=b.extend({type:"player",canCollide:!0,init:function(a){this._super(a),this.inputMap=new c,this.on("collision:bullet:enemy",this.onHit)},set:function(a){this._super(a),this.shots=a.shots||{},this.defaultSpeed=a.speed||8,this.focusSpeed=a.focusSpeed||this.defaultSpeed/2,this.hitbox=this.getHitbox(10,10)},getKey:function(a){return this.inputMap.map[a]},isKeyPressed:function(a){return d.isKeyPressed(d.keys[this.inputMap.map[a]])},update:function(a){this.alive&&(this.control(),this._super(a),this.stayInBounds())},onHit:function(a,b){b.model.color.setHex(16776960)},control:function(){var a=this.isKeyPressed("Up"),b=this.isKeyPressed("Down"),c=this.isKeyPressed("Left"),d=this.isKeyPressed("Right"),e=this.isKeyPressed("Focus"),f=e?this.focusSpeed:this.defaultSpeed,g,h=this.shots;this.isFocused=e;for(var i in h){var j=h[i];this.isKeyPressed(i)&&j.update(delta,this)}this.xSpeed=0,this.ySpeed=0,a?this.ySpeed=-f:b&&(this.ySpeed=f),c?this.xSpeed=-f:d&&(this.xSpeed=f);if(a||b||c||d)g=Math.atan2(this.ySpeed,this.xSpeed),this.xSpeed=f*Math.cos(g),this.ySpeed=f*Math.sin(g)}});return f})