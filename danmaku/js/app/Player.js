define(["require","./Entity","./InputMap","./Input","lib/Three","./BulletPattern"],function(a){var b=a("./Entity"),c=a("./InputMap"),d=a("./Input"),e=a("lib/Three"),f=a("./BulletPattern"),g=b.extend({type:"player",canCollide:!0,init:function(a){this._super(a),this.inputMap=new c,this.on("collision:bullet:enemy",this.onHit)},set:function(a){this._super(a),this.shots=a.shots||{},_.each(this.shots,function(a,b){typeof a=="function"&&(this.shots[b]=new f({update:a}))},this),this.defaultSpeed=a.speed||8,this.focusSpeed=a.focusSpeed||this.defaultSpeed/2,this.hitbox=this.getHitbox(10,10)},getKey:function(a){return this.inputMap.map[a]},isKeyPressed:function(a){return d.isKeyPressed(d.keys[this.inputMap.map[a]])},update:function(a){this.alive&&(this.control(a),this._super(a),this.stayInBounds())},onHit:function(a,b){this.alive=!1},control:function(a){var b=this.isKeyPressed("Up"),c=this.isKeyPressed("Down"),d=this.isKeyPressed("Left"),e=this.isKeyPressed("Right"),f=this.isKeyPressed("Focus"),g=f?this.focusSpeed:this.defaultSpeed,h,i=this.shots;this.isFocused=f;for(var j in i){var k=i[j];k.isEnabled=this.isKeyPressed(j),k.update(a,this,this.state)}this.xSpeed=0,this.ySpeed=0,b?this.ySpeed=-g:c&&(this.ySpeed=g),d?this.xSpeed=-g:e&&(this.xSpeed=g);if(b||c||d||e)h=Math.atan2(this.ySpeed,this.xSpeed),this.xSpeed=g*Math.cos(h),this.ySpeed=g*Math.sin(h)}});return g})